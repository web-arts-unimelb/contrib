<?php

// Alter registry to override theme_webform_results_table
function webform_results_table_theme_registry_alter(&$theme_registry) {
	if (!empty($theme_registry['webform_results_table'])) {
		$theme_registry['webform_results_table']['function'] = 'webform_results_table_webform_results_table';
	}
}

/**
 * Theme the results table displaying all the submissions for a particular node.
 *
 * @param $node
 *   The node whose results are being displayed.
 * @param $components
 *   An associative array of the components for this webform.
 * @param $submissions
 *   An array of all submissions for this webform.
 * @param $total_count
 *   The total number of submissions to this webform.
 * @param $pager_count
 *   The number of results to be shown per page.
 */
function webform_results_table_webform_results_table($variables) {
  drupal_add_library('webform', 'admin');

  $node = $variables['node'];
  $components = $variables['components'];
  $submissions = $variables['submissions'];
  $total_count = $variables['total_count'];
  $pager_count = $variables['pager_count'];

  $header = array();
  $rows = array();
  $cell = array();

  // This header has to be generated seperately so we can add the SQL necessary.
  // to sort the results.
  $header = theme('webform_results_table_header', array('node' => $node));

  // Generate a row for each submission.
  foreach ($submissions as $sid => $submission) {
    $cell[] = l($sid, 'node/' . $node->nid . '/submission/' . $sid);
    $cell[] = format_date($submission->submitted, 'short');
    $cell[] = theme('username', array('account' => $submission));
    $cell[] = $submission->remote_addr;
    $component_headers = array();

    // Generate a cell for each component.
    foreach ($node->webform['components'] as $component) {
      $data = isset($submission->data[$component['cid']]) ? $submission->data[$component['cid']] : NULL;
      $submission_output = webform_component_invoke($component['type'], 'table', $component, $data);
      if ($submission_output !== NULL) {
        $component_headers[] = check_plain($component['name']);
        $cell[] = $submission_output;
      }
    }

    $rows[] = $cell;
    unset($cell);
  }
  if (!empty($component_headers)) {
    $header = array_merge($header, $component_headers);
  }

  if (count($rows) == 0) {
    $rows[] = array(array('data' => t('There are no submissions for this form. <a href="!url">View this form</a>.', array('!url' => url('node/' . $node->nid))), 'colspan' => 4));
  }

  $output = '';
  $output .= theme('webform_results_per_page', array('total_count' => $total_count, 'pager_count' => $pager_count));
  
  $rows = _reduce_cells($rows);
  $header = _reduce_header($header);
  
  $output .= theme('table', array('header' => $header, 'rows' => $rows));
  return $output;
}

function _reduce_cells(&$rows = null, $default_cell_num = 8)
{
	$new_rows = array();
	
	if(count($rows[0]) > $default_cell_num)
	{
		foreach($rows as $row)
		{
			$count = 0;
			$new_row = array();
			foreach($row as $cell)
			{
				if($count < $default_cell_num)
				{
					$new_row[] = $cell;
				}
				elseif($count >= $default_cell_num)
				{
					break;
				}
				
				++$count;
			}
			
			$new_rows[] = $new_row;
		}
	}
	else
	{
		$new_rows = $rows;
	}
	
	return $new_rows;
}

function _reduce_header(&$row = null, $default_cell_num = 8)
{
	$new_row = array();
	$count = 0;

	if(count($row) > $default_cell_num)
	{
		foreach($row as $cell)
		{
			if($count < $default_cell_num)
			{
				$new_row[] = $cell;
			}
			elseif($count >= $default_cell_num)
			{
				break;
			}
			
			++$count;
		}
	}
	else
	{
		$new_row = $row;
	}
	
	return $new_row;
}
